解法：先得到目前为止左右最长path，然后如果左儿子/右儿子还一样就+1，用一个变量保存这个左右path的和，同时递归同侧最长链继续探索

class Solution {
    int res = 0;
    public int longestUnivaluePath(TreeNode root) {
        dfs(root);
        return res;
    }
    private int dfs(TreeNode root) {
        if (root == null) return 0;
        int left = dfs(root.left);
        int right = dfs(root.right);
        int leftPath = 0, rightPath = 0;
        if (root.left != null && root.left.val == root.val) {
            leftPath = left + 1;
        }
        if (root.right != null && root.right.val == root.val) {
            rightPath = right + 1;
        }
        res = Math.max(res, leftPath+rightPath);    //记录目前为止最长的path
        return Math.max(leftPath, rightPath);   //取单侧最长路径
    }
}
