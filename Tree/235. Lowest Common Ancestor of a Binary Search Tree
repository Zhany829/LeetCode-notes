解法：对于p和q，他们的共同祖先会大于其中一个节点同时小于另一个节点。所以从root开始遍历，如果当前节点比pq都大，则去左子树找，反之去右子树

class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if (root.val > p.val && root.val > q.val) return lowestCommonAncestor(root.left, p, q);
        if (root.val < p.val && root.val < q.val) return lowestCommonAncestor(root.right, p, q);
        return root;
    }
}
