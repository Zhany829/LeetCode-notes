解法：终止条件是root是null就返回false，如果到了叶子节点而且当前节点刚好符合减完的target值，就返回true。之后对左/右节点和target减去当前的节点的值递归

class Solution {
    public boolean hasPathSum(TreeNode root, int targetSum) {
        if (root == null) return false;
        // 说明到叶子节点而且target一样
        if (root.left == null && root.right == null && targetSum == root.val) return true;  
        //去递归左/右分别看target减去当前值
        return hasPathSum(root.left, targetSum-root.val) || hasPathSum(root.right, targetSum-root.val);
    }
}
 
