解法：当目标点比root小或等于，则说明目标点的前继在左子树，去左儿子找。
当目标值比root值大，则前继是root或者右子树，先把root记录为前继，再去右儿子找
可以比如就三个节点 1，2，3  如果p=1比root小则去左边找，pre=null。如果p=3，则去root或者右边找，pre=2

public class Solution {
    /**
     * @param root: the given BST
     * @param p: the given node
     * @return: the in-order predecessor of the given node in the BST
     */
    public TreeNode inorderPredecessor(TreeNode root, TreeNode p) {
        // write your code here
        TreeNode pre = null;
        while(root != null) {
            if (root.val >= p.val) {
                root = root.left;
            } else {
                pre = root;
                root = root.right;
            }
        }
        return pre;
    }
}
