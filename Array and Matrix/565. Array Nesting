解法：遍历一遍数组，把遍历过的都置为-1。遍历时候先每次看如果当前数不是-1就开始while，直到遍历到-1，每次while里都会有个变量来计数，同时把当前位置为-1，
也就是按照题目里的要求按照当前数作为index遍历下去。每次while结束都更新最大的count。时间复杂度O(n),空间复杂度O(1)，因为每个数字只会遍历一次

class Solution {
    public int arrayNesting(int[] nums) {
        int res = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == -1) continue;
            int start = nums[i], cnt = 0;
            while (nums[start] != -1) {
                cnt++;
                int tmp = start;
                start = nums[start];
                nums[tmp] = -1;
            }
            res = Math.max(cnt, res);
        }
        return res;
    }
}
