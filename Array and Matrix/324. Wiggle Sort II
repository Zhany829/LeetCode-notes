解法：用桶排序，因为数字最多5000个，所以先创建一个容量5001的桶，然后把数字放到对应的index上，也就是对应index++(num = index)。
之后判断如果nums的长度是奇数 说明是小大小大小 如果是偶数则是小大小大，分别是左右边界都是较小数和左是小右是大的情况
放的时候从后往前放到原nums(放大的时候从index1开始，放小的从index0开始)里，把大的先放满

class Solution {
    public  void wiggleSort(int[] nums) {
        int[] bucket = new int[5001];
        for (int num : nums) bucket[num]++;
        int len = nums.length;
        int small, big;//穿插数字时的上界
        //总长度为奇数时，“小 大 小 大 小”边界左右都为较小的数；
        //总长度为偶数时，“小 大 小 大”边界左为较小的数，边界右为较大的数
        if((len & 1) == 1){
            small = len-1;
            big = len-2;
        }else{
            small = len-2;
            big = len-1;
        }
        int j = 5000; //从后往前，将桶中数字穿插到数组中，后界为j
        //桶中大的数字在后面，小的数字在前面，所以先取出较大的数字，再取出较小的数字
        //先将桶中的较大的数字穿插放在nums中
        for (int i = 1; i <= big; i += 2){
            while (bucket[j] == 0) j--;//找到不为0的桶
            nums[i] = j;
            bucket[j]--;
        }
        //再将桶中的较小的数字穿插放在nums中
        for (int i = 0; i <= small; i+=2){
            while (bucket[j] == 0) j--;//找到不为0的桶
            nums[i] = j;
            bucket[j]--;
        }
    }
}
