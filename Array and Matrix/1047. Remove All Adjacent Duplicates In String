1.定义一个以长度等于字符串s长度的字符数组，定义数组元素的下标index
(index指向的是不与字符串s产生重复的最后一位元素的下标。)，目前数组里没有元素，所以初始化为-1。
对字符串s进行单字符遍历
2.如果数组中index所指向的字符等于当前字符c，即array[index] == c,则index回退到上一位
3.如果数组中index所指向的字符不等于当前字符c,则向index的下一个位添加当前字符。
遍历结束，返回数组中[0,index]位置的字符串。
时空O(n)

class Solution {
    public String removeDuplicates(String s) {
        int index = -1;
        char[] arr = s.toCharArray();
        for (int i = 0; i < arr.length; i++) {
            if (index >= 0 && arr[i] == arr[index]) {
                index--;
            } else {
                index++;
                arr[index] = arr[i];
            }
        }
        String str = new String(arr);
        return str.substring(0, index+1);
    }
}
