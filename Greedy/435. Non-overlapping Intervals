解法：计算最多不重叠的区间。在每次选择中，区间的结尾最为重要，选择的区间结尾越小，留给后面的区间的空间越大，那么后面能够选择的区间个数也就越大。
按区间的结尾进行排序，每次选择结尾最小，并且和前一个区间不重叠的区间：Arrays.sort(intervals, Comparator.comparingInt(o -> o[1]));


class Solution {
    public int eraseOverlapIntervals(int[][] intervals) {
        Arrays.sort(intervals, Comparator.comparingInt(o -> o[1]));
        int end = intervals[0][1];
        int res = 0; //记录重叠的区间数量
        for (int i = 1; i < intervals.length; i++) {
            if (intervals[i][0] < end) {//重叠了 -- res++并且去看能这段能重叠几段，不更新end
                res++;
            } else {
                end = intervals[i][1]; //不重叠去看下一段
            }
        }
        return res;
    }
}
