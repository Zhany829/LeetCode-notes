解法：在出现 nums[i]<nums[i - 1]时，需要考虑的是应该修改数组的哪个数，使得本次修改能使i之前的数组成为非递减数组,并且不影响后续的操作。
优先考虑令nums[i-1] = nums[i]，因为如果修改 nums[i] = nums[i-1] 的话，那么nums[i]这个数会变大，就有可能比 nums[i + 1]大，从而影响了后续操作。
还有一个比较特别的情况就是 nums[i]<nums[i - 2]，修改 nums[i-1] = nums[i]不能使数组成为非递减数组，只能修改nums[i] = nums[i-1]

class Solution {
    public boolean checkPossibility(int[] nums) {
        int cnt = 0;
        for (int i = 1; i < nums.length; i++) {
            if (i >= 2 && nums[i] < nums[i-1] && nums[i] < nums[i-2]) {
    //特殊情况nums[i] < nums[i - 2],修改 nums[i - 1] = nums[i] 不能使数组成为非递减数组,只能修改 nums[i] = nums[i - 1]
                nums[i] = nums[i-1]; 
                cnt++;
            } else if (nums[i] < nums[i-1]) {
                nums[i-1] = nums[i]; //修改 nums[i] = nums[i-1] 的话，那么nums[i]这个数会变大
                cnt++;
            }
        }
        return cnt <= 1;
    }
}
