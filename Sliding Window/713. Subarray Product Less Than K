解法：遍历一遍数组，每次都乘上右指针的数，如果乘积大于等于k了就一直除，直到小于k，再把两个指针的距离差+1添加到res。
因为left left+1 ... right-1 right这区间的数的乘积小于k，那么left+1...right-1 right的乘积也是小于k的，所以这个区间每次减小一个单位可以作为res，也就有了right-left+1种结果

class Solution {
    public int numSubarrayProductLessThanK(int[] nums, int k) {
        if (k <= 1) return 0;
        int len = nums.length;
        int res = 0;
        int left = 0;
        int product = 1;
        for (int right = 0; right < len; right++) {
            product *= nums[right];
            while (product >= k) {
                product /= nums[left++];
            }
            res += right - left + 1;
        }
        return res;
    }
}
