解法：用窗口大小为k去得到sum，先得到第一个窗口的sum，再分别减去左指针++和加上++右指针的值，这样每次得到了新窗口的值并且移动了指针

public class Solution {
    /**
     * @param nums: a list of integers.
     * @param k: length of window.
     * @return: the sum of the element inside the window at each moving.
     */
    public int[] winSum(int[] nums, int k) {
        // write your code here
        if (nums.length == 0) return new int[0];
        int sum = 0;
        int[] res = new int[nums.length - k + 1];
        for (int i = 0; i < k; i++) {
            sum += nums[i];
        }
        res[0] = sum;
        int left = 0, right = k-1;
        while (right < nums.length-1) {
            sum -= nums[left++];
            sum += nums[++right];
            res[left] = sum;
        }
        return res;
    }
}
