解法：如果每个字母出现2次或者偶数次，次数可以被加到长度，如果是奇数，则次数-1被加到总长度，之后最后加上1放在最中间（因为string里可能有特殊符号和大写字母所以数组的长度是256）
一个数/2再*2可以得到一个偶数自己或者奇数-1

class Solution {
    public int longestPalindrome(String s) {
        int[] arr = new int[256];
        for (char c : s.toCharArray()) {
            arr[c]++;
        }
        int len = 0;
        for (int num : arr) {
            len += num/2*2; // 对每个char出现的次数如果是奇数就小1变成偶数
        }
        if (len < s.length()) { //说明有字母是奇数，可以加一个到中间到中间也是回文
            len++;
        }
        return len;
    }
}
