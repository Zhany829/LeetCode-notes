解法：求两个string的最长公共子序列的长度，用两个string的长的和-2*这个长度 = 剩下要删的

class Solution {
    public int minDistance(String word1, String word2) {
        int m = word1.length();
        int n = word2.length();
        int[][] dp = new int[m+1][n+1]; //dp[i][j] 表示word1前i个字符和word2前j个字符中最长公共子序列
        for (int i = 1; i < m+1; i++) {
            for (int j = 1; j < n+1; j++) {
                if (word1.charAt(i-1) == word2.charAt(j-1)) {
                    dp[i][j] = dp[i-1][j-1]+1; //匹配把之前的拿来用+1
                } else {
                    dp[i][j] = Math.max(dp[i-1][j], dp[i][j-1]);//不匹配，看看加上哪个word的单词
                }
            }
        }
        return m+n - 2*dp[m][n];//用总长度减2*最长公共子序列 = 要删掉的数量
    }
}
