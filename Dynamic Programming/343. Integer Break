解法：用dp 记录当前i的位置表示当前数可以获得的最大乘积，获取最大乘积要用i和1..i-1这些数字比较，取dp[j]*(i-j)和j*(i-j)(两个数是拆分的情况)的最大值，用dp[i]和他比较取最大值

class Solution {
    public int integerBreak(int n) {
        int[] dp = new int[n+1];
        dp[1] = 1;
        for (int i = 2; i < n+1; i++) {
            for (int j = 1; j < i; j++) { //获取最大乘积要用i和1..i-1这些数字比较
                dp[i] = Math.max(dp[i], Math.max((j * dp[i-j]), j*(i-j)));
            }
        }
        return dp[n];
    }
}
